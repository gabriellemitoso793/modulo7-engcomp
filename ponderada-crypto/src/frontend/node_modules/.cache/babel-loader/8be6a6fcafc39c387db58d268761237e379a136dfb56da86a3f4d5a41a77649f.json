{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inteli\\\\Documents\\\\GitHub\\\\modulo7-engcomp\\\\ponderada-crypto\\\\src\\\\frontend\\\\src\\\\components\\\\Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title, Tooltip, Legend, Filler, CategoryScale } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, LinearScale, Title, Tooltip, Legend, Filler, CategoryScale);\nconst Graph = () => {\n  _s();\n  const [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    const fetchForecastData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/executarmodelo'); // Ajuste a URL conforme necessário\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setForecast(data.resultado); // Ajuste se necessário para acessar os dados\n      } catch (error) {\n        console.error('Erro ao buscar os dados de previsão:', error);\n      }\n    };\n    fetchForecastData();\n  }, []);\n  if (!forecast || !forecast.previsao_dias || forecast.previsao_dias.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n  const chartData = {\n    labels: forecast.previsao_dias.map((_, index) => `Dia ${index + 1}`),\n    datasets: [{\n      label: 'Previsão de Preço',\n      data: forecast.previsao_dias.map(dia => dia.forecast_price),\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      fill: true,\n      tension: 0.4\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Dias'\n        }\n      },\n      y: {\n        beginAtZero: false,\n        ticks: {\n          callback: function (value) {\n            return `$${value}`;\n          }\n        },\n        title: {\n          display: true,\n          text: 'Preço'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: \"Gr\\xE1fico de Previs\\xE3o de Pre\\xE7o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Graph, \"xlTKpFGEDY72AHUcnH/1pPBQUkI=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","LineElement","PointElement","LinearScale","Title","Tooltip","Legend","Filler","CategoryScale","jsxDEV","_jsxDEV","register","Graph","_s","forecast","setForecast","fetchForecastData","response","fetch","ok","Error","data","json","resultado","error","console","previsao_dias","length","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","map","_","index","datasets","label","dia","forecast_price","borderColor","backgroundColor","fill","tension","options","scales","x","type","title","display","text","y","beginAtZero","ticks","callback","value","className","_c","$RefreshReg$"],"sources":["C:/Users/Inteli/Documents/GitHub/modulo7-engcomp/ponderada-crypto/src/frontend/src/components/Graph.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n    Chart as ChartJS,\n    LineElement,\n    PointElement,\n    LinearScale,\n    Title,\n    Tooltip,\n    Legend,\n    Filler,\n    CategoryScale\n} from 'chart.js';\n\nChartJS.register(LineElement, PointElement, LinearScale, Title, Tooltip, Legend, Filler, CategoryScale);\n\nconst Graph = () => {\n    const [forecast, setForecast] = useState(null);\n\n    useEffect(() => {\n        const fetchForecastData = async () => {\n            try {\n                const response = await fetch('http://localhost:8000/executarmodelo'); // Ajuste a URL conforme necessário\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                setForecast(data.resultado); // Ajuste se necessário para acessar os dados\n            } catch (error) {\n                console.error('Erro ao buscar os dados de previsão:', error);\n            }\n        };\n\n        fetchForecastData();\n    }, []);\n\n    if (!forecast || !forecast.previsao_dias || forecast.previsao_dias.length === 0) {\n        return <div>No data available</div>;\n    }\n\n    const chartData = {\n        labels: forecast.previsao_dias.map((_, index) => `Dia ${index + 1}`),\n        datasets: [\n            {\n                label: 'Previsão de Preço',\n                data: forecast.previsao_dias.map(dia => dia.forecast_price),\n                borderColor: 'rgba(75, 192, 192, 1)',\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                fill: true,\n                tension: 0.4,\n            },\n        ],\n    };\n\n    const options = {\n        scales: {\n            x: { \n                type: 'category',\n                title: {\n                    display: true,\n                    text: 'Dias',\n                },\n            },\n            y: {\n                beginAtZero: false,\n                ticks: {\n                    callback: function(value) {\n                        return `$${value}`;\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'Preço',\n                },\n            }\n        }\n    };\n\n    return (\n        <div className=\"card mt-4\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">Gráfico de Previsão de Preço</h5>\n                <Line data={chartData} options={options} />\n            </div>\n        </div>\n    );\n};\n\nexport default Graph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}