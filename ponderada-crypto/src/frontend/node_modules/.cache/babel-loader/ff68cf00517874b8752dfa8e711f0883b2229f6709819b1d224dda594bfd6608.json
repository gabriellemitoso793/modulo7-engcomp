{"ast":null,"code":"const API_URL = 'http://localhost:8000';\nexport const fetchCryptoData = async crypto => {\n  console.log(`Fetching data for: ${crypto}`);\n  try {\n    const response = await fetch(`${API_URL}/executarmodelo?crypto=${crypto}`);\n    if (!response.ok) {\n      const errorDetails = await response.text();\n      console.error('Erro ao buscar dados da API:', errorDetails);\n      throw new Error(`Erro ao buscar dados da API: ${response.status} ${response.statusText}`);\n    }\n    const data = await response.json();\n    console.log('Data fetched successfully:', data);\n    return data;\n  } catch (error) {\n    console.error('Error in fetchCryptoData:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","fetchCryptoData","crypto","console","log","response","fetch","ok","errorDetails","text","error","Error","status","statusText","data","json"],"sources":["C:/Users/Inteli/Documents/GitHub/modulo7-engcomp/ponderada-crypto/src/frontend/src/api.js"],"sourcesContent":["const API_URL = 'http://localhost:8000';\n\nexport const fetchCryptoData = async (crypto) => {\n    console.log(`Fetching data for: ${crypto}`);\n    try {\n        const response = await fetch(`${API_URL}/executarmodelo?crypto=${crypto}`);\n        \n        if (!response.ok) {\n            const errorDetails = await response.text();\n            console.error('Erro ao buscar dados da API:', errorDetails);\n            throw new Error(`Erro ao buscar dados da API: ${response.status} ${response.statusText}`);\n        }\n        \n        const data = await response.json();\n        console.log('Data fetched successfully:', data);\n        return data; \n    } catch (error) {\n        console.error('Error in fetchCryptoData:', error);\n        throw error; \n    }\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,eAAe,GAAG,MAAOC,MAAM,IAAK;EAC7CC,OAAO,CAACC,GAAG,CAAC,sBAAsBF,MAAM,EAAE,CAAC;EAC3C,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,0BAA0BE,MAAM,EAAE,CAAC;IAE1E,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MACd,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAC1CN,OAAO,CAACO,KAAK,CAAC,8BAA8B,EAAEF,YAAY,CAAC;MAC3D,MAAM,IAAIG,KAAK,CAAC,gCAAgCN,QAAQ,CAACO,MAAM,IAAIP,QAAQ,CAACQ,UAAU,EAAE,CAAC;IAC7F;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClCZ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEU,IAAI,CAAC;IAC/C,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACZP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}