{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inteli\\\\Documents\\\\GitHub\\\\modulo7-engcomp\\\\ponderada-crypto\\\\src\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CryptoSelector from './CryptoSelector';\nimport Graph from './Graph';\nimport Forecast from './Forecast';\nimport Loading from './Loading';\nimport { fetchCryptoData } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [selectedCrypto, setSelectedCrypto] = useState('bitcoin'); // Inicializa com bitcoin\n  const [data, setData] = useState({}); // Inicializa como um objeto vazio\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const result = await fetchCryptoData(selectedCrypto);\n\n      // Verifica se há dados válidos para a criptomoeda selecionada\n      if (result && result.dates && result.dates[selectedCrypto]) {\n        setData(result.dates[selectedCrypto]); // Atualiza com dados específicos da criptomoeda\n      } else {\n        setData({}); // Garante que não será null, mas um objeto vazio\n      }\n      setLoading(false);\n    };\n    getData();\n  }, [selectedCrypto]);\n\n  // Exibe o componente de carregamento enquanto os dados estão sendo buscados\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n\n  // Verifica a presença dos dados de forma mais robusta\n  const hasData = data && Object.keys(data).length > 0;\n  if (!hasData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-4\",\n      children: \"Dados n\\xE3o encontrados para a criptomoeda selecionada.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(CryptoSelector, {\n      selectedCrypto: selectedCrypto,\n      setSelectedCrypto: setSelectedCrypto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(Graph, {\n          data: data,\n          selectedCrypto: selectedCrypto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(Forecast, {\n          forecast: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"e6xiJEWC6WC92iS75KvN3DpWp3U=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","CryptoSelector","Graph","Forecast","Loading","fetchCryptoData","jsxDEV","_jsxDEV","Dashboard","_s","selectedCrypto","setSelectedCrypto","data","setData","loading","setLoading","getData","result","dates","fileName","_jsxFileName","lineNumber","columnNumber","hasData","Object","keys","length","className","children","forecast","_c","$RefreshReg$"],"sources":["C:/Users/Inteli/Documents/GitHub/modulo7-engcomp/ponderada-crypto/src/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CryptoSelector from './CryptoSelector';\nimport Graph from './Graph';\nimport Forecast from './Forecast';\nimport Loading from './Loading';\nimport { fetchCryptoData } from '../api';\n\nconst Dashboard = () => {\n    const [selectedCrypto, setSelectedCrypto] = useState('bitcoin'); // Inicializa com bitcoin\n    const [data, setData] = useState({}); // Inicializa como um objeto vazio\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const getData = async () => {\n            setLoading(true);\n            const result = await fetchCryptoData(selectedCrypto);\n\n            // Verifica se há dados válidos para a criptomoeda selecionada\n            if (result && result.dates && result.dates[selectedCrypto]) {\n                setData(result.dates[selectedCrypto]); // Atualiza com dados específicos da criptomoeda\n            } else {\n                setData({}); // Garante que não será null, mas um objeto vazio\n            }\n            setLoading(false);\n        };\n\n        getData();\n    }, [selectedCrypto]);\n\n    // Exibe o componente de carregamento enquanto os dados estão sendo buscados\n    if (loading) return <Loading />;\n\n    // Verifica a presença dos dados de forma mais robusta\n    const hasData = data && Object.keys(data).length > 0;\n\n    if (!hasData) {\n        return <div className=\"text-center my-4\">Dados não encontrados para a criptomoeda selecionada.</div>;\n    }\n\n    return (\n        <div className=\"container\">\n            <CryptoSelector selectedCrypto={selectedCrypto} setSelectedCrypto={setSelectedCrypto} />\n            <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <Graph data={data} selectedCrypto={selectedCrypto} />\n                </div>\n                <div className=\"col-lg-6\">\n                    <Forecast forecast={data} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,eAAe,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACjE,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMgB,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxBD,UAAU,CAAC,IAAI,CAAC;MAChB,MAAME,MAAM,GAAG,MAAMZ,eAAe,CAACK,cAAc,CAAC;;MAEpD;MACA,IAAIO,MAAM,IAAIA,MAAM,CAACC,KAAK,IAAID,MAAM,CAACC,KAAK,CAACR,cAAc,CAAC,EAAE;QACxDG,OAAO,CAACI,MAAM,CAACC,KAAK,CAACR,cAAc,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,MAAM;QACHG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB;MACAE,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC;;EAEpB;EACA,IAAII,OAAO,EAAE,oBAAOP,OAAA,CAACH,OAAO;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;;EAE/B;EACA,MAAMC,OAAO,GAAGX,IAAI,IAAIY,MAAM,CAACC,IAAI,CAACb,IAAI,CAAC,CAACc,MAAM,GAAG,CAAC;EAEpD,IAAI,CAACH,OAAO,EAAE;IACV,oBAAOhB,OAAA;MAAKoB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAqD;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxG;EAEA,oBACIf,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBrB,OAAA,CAACN,cAAc;MAACS,cAAc,EAAEA,cAAe;MAACC,iBAAiB,EAAEA;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxFf,OAAA;MAAKoB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAChBrB,OAAA;QAAKoB,SAAS,EAAC,UAAU;QAAAC,QAAA,eACrBrB,OAAA,CAACL,KAAK;UAACU,IAAI,EAAEA,IAAK;UAACF,cAAc,EAAEA;QAAe;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eACNf,OAAA;QAAKoB,SAAS,EAAC,UAAU;QAAAC,QAAA,eACrBrB,OAAA,CAACJ,QAAQ;UAAC0B,QAAQ,EAAEjB;QAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACb,EAAA,CA7CID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}