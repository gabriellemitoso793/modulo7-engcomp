{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inteli\\\\Documents\\\\GitHub\\\\modulo7-engcomp\\\\ponderada-crypto\\\\src\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CryptoSelector from './CryptoSelector';\nimport Graph from './Graph';\nimport Forecast from './Forecast';\nimport Loading from './Loading';\nimport { fetchCryptoData } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [selectedCrypto, setSelectedCrypto] = useState('bitcoin');\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const result = await fetchCryptoData(selectedCrypto);\n      setData(result);\n      setLoading(false);\n    };\n    getData();\n  }, [selectedCrypto]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(CryptoSelector, {\n      selectedCrypto: selectedCrypto,\n      setSelectedCrypto: setSelectedCrypto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(Graph, {\n          data: data.dates,\n          selectedCrypto: selectedCrypto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(Forecast, {\n          forecast: data.dates[selectedCrypto]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"Pskg3E8tFk1AfQeKnZwvXJgZV9E=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","CryptoSelector","Graph","Forecast","Loading","fetchCryptoData","jsxDEV","_jsxDEV","Dashboard","_s","selectedCrypto","setSelectedCrypto","data","setData","loading","setLoading","getData","result","fileName","_jsxFileName","lineNumber","columnNumber","className","children","dates","forecast","_c","$RefreshReg$"],"sources":["C:/Users/Inteli/Documents/GitHub/modulo7-engcomp/ponderada-crypto/src/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CryptoSelector from './CryptoSelector';\nimport Graph from './Graph';\nimport Forecast from './Forecast';\nimport Loading from './Loading';\nimport { fetchCryptoData } from '../api';\n\nconst Dashboard = () => {\n    const [selectedCrypto, setSelectedCrypto] = useState('bitcoin');\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const getData = async () => {\n            setLoading(true);\n            const result = await fetchCryptoData(selectedCrypto);\n            setData(result);\n            setLoading(false);\n        };\n\n        getData();\n    }, [selectedCrypto]);\n\n    if (loading) return <Loading />;\n\n    return (\n        <div className=\"container\">\n            <CryptoSelector selectedCrypto={selectedCrypto} setSelectedCrypto={setSelectedCrypto} />\n            <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <Graph data={data.dates} selectedCrypto={selectedCrypto} />\n                </div>\n                <div className=\"col-lg-6\">\n                    <Forecast forecast={data.dates[selectedCrypto]} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,eAAe,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,SAAS,CAAC;EAC/D,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMgB,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxBD,UAAU,CAAC,IAAI,CAAC;MAChB,MAAME,MAAM,GAAG,MAAMZ,eAAe,CAACK,cAAc,CAAC;MACpDG,OAAO,CAACI,MAAM,CAAC;MACfF,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC;EAEpB,IAAII,OAAO,EAAE,oBAAOP,OAAA,CAACH,OAAO;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE/B,oBACId,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBhB,OAAA,CAACN,cAAc;MAACS,cAAc,EAAEA,cAAe;MAACC,iBAAiB,EAAEA;IAAkB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxFd,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAChBhB,OAAA;QAAKe,SAAS,EAAC,UAAU;QAAAC,QAAA,eACrBhB,OAAA,CAACL,KAAK;UAACU,IAAI,EAAEA,IAAI,CAACY,KAAM;UAACd,cAAc,EAAEA;QAAe;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACNd,OAAA;QAAKe,SAAS,EAAC,UAAU;QAAAC,QAAA,eACrBhB,OAAA,CAACJ,QAAQ;UAACsB,QAAQ,EAAEb,IAAI,CAACY,KAAK,CAACd,cAAc;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACZ,EAAA,CA/BID,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}