{"ast":null,"code":"export const fetchCryptoData = async crypto => {\n  console.log(`Fetching data for: ${crypto}`);\n  const response = await fetch(`${API_URL}/executarmodelo?crypto=${crypto}`);\n  if (!response.ok) {\n    console.error('Erro ao buscar dados da API');\n    throw new Error('Erro ao buscar dados da API');\n  }\n  const data = await response.json();\n  console.log('Data fetched successfully:', data);\n  return data;\n};","map":{"version":3,"names":["fetchCryptoData","crypto","console","log","response","fetch","API_URL","ok","error","Error","data","json"],"sources":["C:/Users/Inteli/Documents/GitHub/modulo7-engcomp/ponderada-crypto/src/frontend/src/api.js"],"sourcesContent":["export const fetchCryptoData = async (crypto) => {\n    console.log(`Fetching data for: ${crypto}`);\n    const response = await fetch(`${API_URL}/executarmodelo?crypto=${crypto}`);\n    if (!response.ok) {\n        console.error('Erro ao buscar dados da API');\n        throw new Error('Erro ao buscar dados da API');\n    }\n    const data = await response.json();\n    console.log('Data fetched successfully:', data);\n    return data; \n};\n"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,MAAOC,MAAM,IAAK;EAC7CC,OAAO,CAACC,GAAG,CAAC,sBAAsBF,MAAM,EAAE,CAAC;EAC3C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,0BAA0BL,MAAM,EAAE,CAAC;EAC1E,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;IACdL,OAAO,CAACM,KAAK,CAAC,6BAA6B,CAAC;IAC5C,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAClD;EACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAClCT,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEO,IAAI,CAAC;EAC/C,OAAOA,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}